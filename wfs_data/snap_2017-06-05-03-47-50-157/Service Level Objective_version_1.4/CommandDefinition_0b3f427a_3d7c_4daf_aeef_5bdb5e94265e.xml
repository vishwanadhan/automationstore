<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<commandDefinition name="Create Storage Service Level table" samplingIntervalInSeconds="60" stringRepresentation="&quot;Storage Service Level table &quot;" timeoutInSeconds="600" type="STANDARD">
    <certification>NETAPP</certification>
    <uuid>0b3f427a-3d7c-4daf-aeef-5bdb5e94265e</uuid>
    <version>1.0.0</version>
    <command-implementations>
        <command-implementation>
            <command>use strict;
use Getopt::Long;
use NaServer;
use WFAUtil;
 
my $Action;


GetOptions(
    &quot;Action=s&quot;   =&gt; \$Action,
) or die 'Illegal command parameters\n';

my $result; 

my $Query;


my $wfa_util = WFAUtil-&gt;new();

if ($Action eq 'Create')  {

$wfa_util-&gt;sendLog('INFO', 'Creating table');

$Query = &quot;CREATE TABLE IF NOT EXISTS playground.storage_service_level ( 
	             id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
	             storage_service_name VARCHAR(255) UNIQUE, 
	             iops_throttle INTEGER,
                             min_iops INTEGER,
	             space_guarantee VARCHAR(255),
	             deduplication_enabled VARCHAR(255),
	             compression_enabled VARCHAR(255),
                             thin_provisioning_percent_gain INTEGER,
                             dedupe_clone_percent_gain INTEGER,
                             aggr_regex_enabled VARCHAR(255),
	             aggr_include_regex VARCHAR(255) DEFAULT NULL,
                             aggr_exclude_regex  VARCHAR(255),
                             vol_include_regex  VARCHAR(255),
                             vol_exclude_regex  VARCHAR(255),
	             disk_types_list  VARCHAR(255),
	             disk_rpm DOUBLE(10,2) DEFAULT NULL,
	             enforce ENUM('thick', 'thin', 'effective'),
	             headroom DOUBLE(5,2) DEFAULT NULL,
	             hybrid_aggregate ENUM('true', 'false'),
	             thin_min DOUBLE(5,2),
	             comment VARCHAR(255))&quot;; 
}
if ($Action eq 'Drop')  {

$wfa_util-&gt;sendLog('INFO', 'Dropping a table');

$Query = &quot;DROP TABLE IF EXISTS playground.storage_service_level&quot;;

}

if ($Action eq 'Alter')  {

$wfa_util-&gt;sendLog('INFO', 'Altering a table, adding aggr_regex_enabled, aggr_include_regex columns');

$Query = &quot;ALTER TABLE playground.storage_service_level ADD COLUMN aggr_regex_enabled VARCHAR(255) DEFAULT 'false' AFTER dedupe_clone_percent_gain, ADD COLUMN aggr_include_regex VARCHAR(255) DEFAULT NULL AFTER aggr_regex_enabled&quot;;

}



# Creating table lun_import if not exists 

my $database=&quot;playground&quot;;

eval { 
	$result = $wfa_util-&gt;invokeMySqlQuery($Query,$database); 
}; 

if($@) 
{ 
	$wfa_util-&gt;sendLog('ERROR', 'Failed to create Storage Service Level table: ' .$@); 
} 
else 
{ 
	$wfa_util-&gt;sendLog('INFO', 'Successfully created table for Storare Service Level: ' . $result); 
} 







</command>
            <commandLanguage>PERL</commandLanguage>
        </command-implementation>
    </command-implementations>
    <parameter-mappings>
        <parameter-mapping objectName="Action" parameterName="Action"/>
    </parameter-mappings>
    <congruenceTest></congruenceTest>
    <description>This command will check if table to keep &quot;Storage service level(SSL)&quot; details. If not it will create the table.</description>
    <parameter-definitions>
        <parameter-definition description="Provides a option to create or drop table" enumValues="Create,Drop,Alter" isMandatory="true" name="Action" type="Enum">
            <uuid>aac0faed-9435-4dce-ad99-5daa3782d4b8</uuid>
        </parameter-definition>
    </parameter-definitions>
    <reservationScript></reservationScript>
    <schemeNames></schemeNames>
</commandDefinition>
